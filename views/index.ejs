<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>User list</title>
    </head>
    <body>
        <label>検索：<input type="text" id="searchInput" placeholder="nameで検索"></label>
        <input type="button" value="実行" id="searchButton">
        <div>統計調査<input type="button" value="実行" id="tokeiButton"></div>
        <div>▼gender</div>
        <span id="genderResult"></span>
        <div>▼workplace</div>
        <span id="workplaceResult"></span>
        <div>▼household</div>
        <span id="householdResult"></span>
        <table border="1" id="myTable">
            <tr>
                <th>name</th>
                <th>kana_name</th>
                <th>gender</th>
                <th>email</th>
                <th>phone</th>
                <th>address</th>
                <th>workplace</th>
                <th>household</th>
                <th>更新・削除</th>
            </tr>
            <% users.forEach(function (element) { %>
                <tr>
                    <td>
                        <%= element.name %>
                    </td>
                    <td>
                        <%= element.kana_name %>
                    </td>
                    <td>
                        <%= element.gender %>
                    </td>
                    <td>
                        <%= element.email %>
                    </td>
                    <td>
                        <%= element.phone %>
                    </td>
                    <td>
                        <%= element.address %>
                    </td>
                    <td>
                        <%= element.workplace %>
                    </td>
                    <td>
                        <%= element.household %>
                    </td>
                    <td>
                        <!-- // 更新ボタン -->
                        <button type="button">
                            <!-- <a href="/edit/" DBのIDをして下さい">更新</a> -->
                            <a href="/edit/<%= element.id %>">更新</a>
                        </button>
                        <!-- // 削除ボタン -->
                        <button type="button">
                            <a href="/delete/<%= element.id %>">削除</a>
                        </button>
                        <!-- 追加ボタン（情報格納） -->
                        <button class="addButton" type="button">選択</button>
                    </td>
                </tr>
                <% }); %>
        </table>
        <p><a href="/create">ユーザーの追加</a></p>
        <label>ID：<input type="text" id="nameText"></label>
        <input type="button" value="Check" id="checkButton">
        <p id="msg"></p>
        <div>選択した情報一覧</div>
        <table border="1" id="myTable2">
            <thead>
                <tr>
                    <th>name</th>
                    <th>kana_name</th>
                    <th>gender</th>
                    <th>email</th>
                    <th>phone</th>
                    <th>address</th>
                    <th>workplace</th>
                    <th>household</th>
                </tr>
            </thead>
            <tbody id="addList"></tbody>
        </table>
        <script type="text/javascript">
            let users = JSON.parse('<%= JSON.stringify(users) %>'.replace(/&#34;/g, '"'));
            console.log(users);

            function buttonClick() {
                let found = users.find(e => e.id === Number(nameText.value));
                // console.log(found);
                msg.innerText = `名前:${found.name}、email:${found.email}`;
            }

            // pタグ情報の取得
            let msg = document.getElementById('msg');
            // テキストボックスの情報取得
            let nameText = document.getElementById('nameText');
            // ボタンタグの情報取得
            let checkButton = document.getElementById('checkButton');
            // ボタンがクリックされた時に関数buttonClickが動く
            checkButton.addEventListener('click', buttonClick);

            // 情報の絞り込み機能
            document.getElementById('searchButton').addEventListener('click', function () {
                let keyword = document.getElementById('searchInput').value;
                let tableRows = document.getElementById('myTable').getElementsByTagName('tr');

                for (let i = 1; i < tableRows.length; i++) {
                    let rowText = tableRows[i].textContent.toLowerCase();
                    if (rowText.indexOf(keyword) > -1) {
                        tableRows[i].style.display = '';
                    } else {
                        tableRows[i].style.display = 'none';
                    }
                }
            });
            // 情報を格納する機能
            let addButton = document.querySelectorAll('.addButton');
            let tableRows = document.getElementById('myTable').getElementsByTagName('tr');
            let newList = [];
            for (let j = 0; j < addButton.length; j++) {
                addButton[j].addEventListener('click', () => {
                    delete users[j].id;
                    tableRows[j + 1].style.display = 'none';
                    const tr = document.createElement("tr");
                    const addList = document.getElementById("addList");
                    addList.appendChild(tr); // 表の中に「tr」（行）ができる
                    // 1行の中を生成
                    const objArray = Object.entries(users[j]);  // オブジェクトを配列に
                    objArray.forEach((arr) => { // name, kana_name等の項目の数分繰り返す
                        const td = document.createElement("td");
                        td.textContent = arr[1];  // arr[1]はvalueの部分
                        tr.appendChild(td);
                    });
                });
            }
            // 各項目の内容を統計する機能
            let tokeiButton = document.querySelector('#tokeiButton');
            let genderResult = document.querySelector('#genderResult');
            let workplaceResult = document.querySelector('#workplaceResult');
            let householdResult = document.querySelector('#householdResult');
            tokeiButton.addEventListener('click', function () {
                // 連続でボタンが押されても正常に更新されるように
                genderResult.innerText = "";
                workplaceResult.innerText = "";
                householdResult.innerText = "";
                let workplaceTokei = [
                    { place: "北海道", count: 0 },
                    { place: "青森", count: 0 },
                    { place: "岩手", count: 0 },
                    { place: "宮城", count: 0 },
                    { place: "秋田", count: 0 },
                    { place: "山形", count: 0 },
                    { place: "福島", count: 0 },
                    { place: "茨城", count: 0 },
                    { place: "栃木", count: 0 },
                    { place: "群馬", count: 0 },
                    { place: "埼玉", count: 0 },
                    { place: "千葉", count: 0 },
                    { place: "東京", count: 0 },
                    { place: "神奈川", count: 0 },
                    { place: "新潟", count: 0 },
                    { place: "富山", count: 0 },
                    { place: "石川", count: 0 },
                    { place: "福井", count: 0 },
                    { place: "山梨", count: 0 },
                    { place: "長野", count: 0 },
                    { place: "岐阜", count: 0 },
                    { place: "静岡", count: 0 },
                    { place: "愛知", count: 0 },
                    { place: "三重", count: 0 },
                    { place: "滋賀", count: 0 },
                    { place: "京都", count: 0 },
                    { place: "大阪", count: 0 },
                    { place: "兵庫", count: 0 },
                    { place: "奈良", count: 0 },
                    { place: "和歌山", count: 0 },
                    { place: "鳥取", count: 0 },
                    { place: "島根", count: 0 },
                    { place: "岡山", count: 0 },
                    { place: "広島", count: 0 },
                    { place: "山口", count: 0 },
                    { place: "徳島", count: 0 },
                    { place: "香川", count: 0 },
                    { place: "愛媛", count: 0 },
                    { place: "高知", count: 0 },
                    { place: "福岡", count: 0 },
                    { place: "佐賀", count: 0 },
                    { place: "長崎", count: 0 },
                    { place: "熊本", count: 0 },
                    { place: "大分", count: 0 },
                    { place: "宮崎", count: 0 },
                    { place: "鹿児島", count: 0 },
                    { place: "沖縄", count: 0 }
                ];
                let genderTokei = [
                    { gender: "男性", count: 0 },
                    { gender: "女性", count: 0 }
                ];
                let setaiTokei = [
                    { household: 1, count: 0 },
                    { household: 2, count: 0 },
                    { household: 3, count: 0 },
                    { household: 4, count: 0 },
                    { household: 5, count: 0 }
                ];
                for (let i = 0; i < workplaceTokei.length; i++) {
                    for (let j = 0; j < users.length; j++) {
                        if (users[j].workplace === workplaceTokei[i].place) {
                            workplaceTokei[i].count++;
                        }
                    }
                    if (workplaceTokei[i].count !== 0) {
                        workplaceResult.insertAdjacentHTML('beforeend', `${workplaceTokei[i].place}：${workplaceTokei[i].count}人<br>`);
                    }
                }
                for (let i = 0; i < genderTokei.length; i++) {
                    for (let j = 0; j < users.length; j++) {
                        if (users[j].gender === genderTokei[i].gender) {
                            genderTokei[i].count++;
                        }
                    }
                    if (genderTokei[i].count !== 0) {
                        genderResult.insertAdjacentHTML('beforeend', `${genderTokei[i].gender}：${genderTokei[i].count}人<br>`);
                    }
                }
                for (let i = 0; i < setaiTokei.length; i++) {
                    for (let j = 0; j < users.length; j++) {
                        if (users[j].household === setaiTokei[i].household) {
                            setaiTokei[i].count++;
                        }
                    }
                    if (setaiTokei[i].count !== 0) {
                        householdResult.insertAdjacentHTML('beforeend', `世帯数${setaiTokei[i].household}：${setaiTokei[i].count}人<br>`);
                    }
                }
            });
        </script>
    </body>
</html>
